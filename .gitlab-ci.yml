stages:
  - build
  - tests
  - cleanup

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY

build:
  stage: build
  script:
    # - docker-compose build
    # Pull the latest image if it exists, otherwise continue.
    - docker pull $CONTAINER_RELEASE_IMAGE || true

    - >
      docker build
      --pull
      --cache-from $CONTAINER_RELEASE_IMAGE
      --label "org.opencontainers.image.title=$CI_PROJECT_TITLE"
      --label "org.opencontainers.image.url=$CI_PROJECT_URL"
      --label "org.opencontainers.image.created=$CI_JOB_STARTED_AT"
      --label "org.opencontainers.image.revision=$CI_COMMIT_SHA"
      --label "org.opencontainers.image.version=$CI_COMMIT_REF_NAME"
      --tag $CONTAINER_TEST_IMAGE
      .
    
    # - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

rubocop:
  stage: tests
  script:
    - docker-compose run rubocop

rspec:
  stage: tests
  script:
    - docker-compose run rspec

cleanup:
  stage: cleanup
  script:
    - docker system prune -af && docker volume prune -f
